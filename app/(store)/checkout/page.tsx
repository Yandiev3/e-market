// app/(store)/checkout/page.tsx
'use client';

import React, { useState } from 'react';
import { useCart } from '@/context/CartContext';
import { useAuth } from '@/context/AuthContext';
import { formatPrice } from '@/lib/utils';
import SubmitButton from '@/components/ui/SubmitButton';
import Input from '@/components/ui/Input';

export default function CheckoutPage() {
  const { items, clearCart } = useCart();
  const { user } = useAuth();
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    email: user?.email || '',
    firstName: '',
    lastName: '',
    phone: '',
    address: '',
    city: '',
    postalCode: '',
    country: '–†–æ—Å—Å–∏—è',
    paymentMethod: 'card',
    saveInfo: true,
  });

  const subtotal = items.reduce((total, item) => total + item.price * item.quantity, 0);
  const shippingPrice = subtotal >= 5000 ? 0 : 500;
  const total = subtotal + shippingPrice;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      // Simulate order processing
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Clear cart and redirect to success page
      clearCart();
      window.location.href = '/order-success';
    } catch (error) {
      console.error('Checkout error:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value, type } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value
    }));
  };

  if (items.length === 0) {
    return (
      <div className="max-w-4xl mx-auto px-4 py-8">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h1>
          <p className="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
          <a href="/products" className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º
          </a>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto px-4 py-8">
      <h1 className="text-2xl md:text-3xl font-bold text-gray-900 mb-8">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>

      <form onSubmit={handleSubmit} className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Left column - Form */}
        <div className="space-y-8">
          {/* Contact information */}
          <section className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Input
                label="–ò–º—è"
                name="firstName"
                value={formData.firstName}
                onChange={handleInputChange}
                required
              />
              <Input
                label="–§–∞–º–∏–ª–∏—è"
                name="lastName"
                value={formData.lastName}
                onChange={handleInputChange}
                required
              />
              <Input
                label="Email"
                type="email"
                name="email"
                value={formData.email}
                onChange={handleInputChange}
                required
              />
              <Input
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                required
              />
            </div>
          </section>

          {/* Shipping address */}
          <section className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</h2>
            <div className="grid grid-cols-1 gap-4">
              <Input
                label="–ê–¥—Ä–µ—Å"
                name="address"
                value={formData.address}
                onChange={handleInputChange}
                required
              />
              <div className="grid grid-cols-2 gap-4">
                <Input
                  label="–ì–æ—Ä–æ–¥"
                  name="city"
                  value={formData.city}
                  onChange={handleInputChange}
                  required
                />
                <Input
                  label="–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å"
                  name="postalCode"
                  value={formData.postalCode}
                  onChange={handleInputChange}
                  required
                />
              </div>
              <Input
                label="–°—Ç—Ä–∞–Ω–∞"
                name="country"
                value={formData.country}
                onChange={handleInputChange}
                required
              />
            </div>
          </section>

          {/* Payment method */}
          <section className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>
            <div className="space-y-3">
              <label className="flex items-center p-4 border border-gray-300 rounded-lg cursor-pointer hover:border-gray-400">
                <input
                  type="radio"
                  name="paymentMethod"
                  value="card"
                  checked={formData.paymentMethod === 'card'}
                  onChange={handleInputChange}
                  className="text-blue-600 focus:ring-blue-500"
                />
                <div className="ml-3">
                  <span className="font-medium text-gray-900">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</span>
                  <p className="text-sm text-gray-600">Visa, Mastercard, –ú–ò–†</p>
                </div>
              </label>

              <label className="flex items-center p-4 border border-gray-300 rounded-lg cursor-pointer hover:border-gray-400">
                <input
                  type="radio"
                  name="paymentMethod"
                  value="cash"
                  checked={formData.paymentMethod === 'cash'}
                  onChange={handleInputChange}
                  className="text-blue-600 focus:ring-blue-500"
                />
                <div className="ml-3">
                  <span className="font-medium text-gray-900">–ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</span>
                  <p className="text-sm text-gray-600">–û–ø–ª–∞—Ç–∞ –∫—É—Ä—å–µ—Ä—É</p>
                </div>
              </label>
            </div>
          </section>
        </div>

        {/* Right column - Order summary */}
        <div className="space-y-6">
          <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">–í–∞—à –∑–∞–∫–∞–∑</h2>
            
            <div className="space-y-3">
              {items.map((item) => (
                <div key={item.id} className="flex justify-between text-sm">
                  <span className="text-gray-600">
                    {item.name} √ó {item.quantity}
                  </span>
                  <span className="text-gray-900">{formatPrice(item.price * item.quantity)}</span>
                </div>
              ))}
            </div>

            <div className="border-t border-gray-200 pt-4 mt-4 space-y-2">
              <div className="flex justify-between text-sm">
                <span className="text-gray-600">–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥</span>
                <span className="text-gray-900">{formatPrice(subtotal)}</span>
              </div>
              <div className="flex justify-between text-sm">
                <span className="text-gray-600">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                <span className={shippingPrice === 0 ? 'text-green-600' : 'text-gray-900'}>
                  {shippingPrice === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : formatPrice(shippingPrice)}
                </span>
              </div>
              <div className="flex justify-between text-lg font-semibold pt-2 border-t border-gray-200">
                <span>–ò—Ç–æ–≥–æ</span>
                <span className="text-gray-900">{formatPrice(total)}</span>
              </div>
            </div>

            <SubmitButton
              loading={loading}
              disabled={items.length === 0}
              className="mt-6"
            >
              –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑
            </SubmitButton>
          </div>

          {/* Security info */}
          <div className="bg-blue-50 p-4 rounded-lg">
            <div className="flex items-center">
              <div className="text-blue-600 text-2xl mr-3">üîí</div>
              <div>
                <p className="text-sm font-medium text-blue-900">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</p>
                <p className="text-xs text-blue-700">–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º</p>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  );
}